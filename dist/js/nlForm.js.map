{"version":3,"sources":["src/app.module.js","src/app.config.js","src/shared/input/nlFormService.js","src/shared/input/nlFormDirective.js","src/shared/input/nlTextDirective.js","src/shared/input/nlSelectDirective.js"],"names":["runBlock","angular","module","run","$inject","configBlock","config","constant","nlFormService","setActive","element","activeElement","removeClass","addClass","closeActive","getActive","clearActive","factory","nlForm","restrict","controller","$scope","$element","this","directive","nlText","nlTextLink","$attr","$ctrls","read","text","html","replace","String","ngModel","$setViewValue","attr","bind","document","focus","event","preventDefault","clipboardData","getData","execCommand","$render","$viewValue","$apply","keyCode","getWidth","offsetWidth","$watch","width","require","link","nlSelect","$window","$interpolate","$timeout","nlSelectController","optionClicked","undefined","selected","nlSelectLink","childOf","c","p","parentNode","updateClass","children","on","a","target","transclude","template","selectTpl","scope","placeholder","nlOption","nlOptionLink","stopPropagation","val","value","optionTpl"],"mappings":"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","file":"js/nlForm.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular.module('nlForm', []);\n\n    /**\n    Run app\n    */\n    angular\n        .module('nlForm')\n        .run(runBlock);\n\n    runBlock.$inject = [];\n\n    function runBlock() {\n\n    }\n\n})();","(function() {\n    'use strict';\n\n  angular\n      .module('nlForm')\n      .config(configBlock)\n      .constant('CONFIG',{\n      });\n\n    configBlock.$inject = [];\n\n    function configBlock() {\n\n\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('nlForm')\n        .factory('nlFormService', nlFormService);\n\n\n    nlFormService.$inject = [];\n\n    function nlFormService() { \n\n        var activeElement = null;\n\n        function setActive(element) {\n            if(activeElement != null) {\n                activeElement.removeClass('active');\n                if(element != activeElement) {\n                    element.addClass('active');\n                    activeElement = element;  \n                }\n                else {\n                    activeElement = null;\n                }\n            }\n            else {\n                element.addClass('active');\n                activeElement = element;  \n            }\n        }\n\n        function closeActive() {\n            if(activeElement != null) {\n                activeElement.removeClass('active');\n                activeElement = null;\n            }\n        }\n\n        function getActive() {\n            return activeElement;\n        }\n\n        function clearActive() {\n            activeElement = null;\n        }\n\n        return {\n            setActive: setActive,\n            closeActive: closeActive,\n            getActive: getActive,\n            clearActive: clearActive\n        };\n\n    }\n\n\n})();","(function() {\n    'use strict';\n\n  angular\n  .module('nlForm')\n  .directive('nlForm', nlForm);\n\n\n  function nlForm() {\n    return {\n      restrict:'EA',\n      controller: ['$scope','$element','nlFormService', function($scope,$element,nlFormService) {\n        this.element = $element;\n        nlFormService.clearActive();\n      }]\n    }\n  }  \n\n})();\n\n","//<span class=\"editable\" contenteditable=\"true\" ng-model=\"vm.brief.sample.search[1]\"></span>\n\n(function() {\n    'use strict';\n\n    angular\n    .module('nlForm')\n    .directive('nlText', nlText);\n\n    nlText.$inject = [];\n\n    function nlText() {\n        return {\n            restrict: 'EA',\n            require: ['ngModel'],\n            link: nlTextLink\n        }\n\n        function nlTextLink($scope, $element, $attr, $ctrls) {\n            $element.attr('contenteditable', 'true');\n\n            var ngModel = $ctrls[0];\n\n            function read() {\n                var text  = $element.html();\n                //Remove trailing space\n                text = text.replace(/(&nbsp;)+$/g,\"\");\n                //Remove br\n                text = String(text).replace(/<[^>]+>/gm, '');\n                ngModel.$setViewValue(text);\n            }\n\n\n            $element.bind(\"click\", function() {\n                if($element[0] != document.activeElement ) {\n                    $element[0].focus();\n                }\n                 \n            });\n\n            $element.bind(\"paste\", function(event) {\n                // cancel paste\n                event.preventDefault();\n                // get text representation of clipboard\n                var text = event.clipboardData.getData(\"text/plain\");\n                // insert text manually\n                document.execCommand(\"insertHTML\", false, text);\n            });\n\n            ngModel.$render = function() {\n                $element.html(ngModel.$viewValue || \"\");\n            };\n\n            $element.bind(\"blur keyup change\", function() {\n                $scope.$apply(read);\n            });\n\n            $element.bind(\"keydown\", function(event) {\n                 if (event.keyCode === 13) {\n                    event.preventDefault();\n                }\n            });\n\n            $scope.getWidth = function () {\n                return $element[0].offsetWidth;\n            };\n\n            $scope.$watch($scope.getWidth, function (width) {\n              if (width > 150) {\n                $element.addClass('inline');\n              }\n              else if (width <= 150) {\n                $element.removeClass('inline');\n              }\n            });\n\n        }\n    }\n})();","(function() {\n    'use strict';\n\n  angular\n  .module('nlForm')\n  .directive('nlSelect', nlSelect)\n  .directive('nlOption', nlOption);\n\n  nlSelect.$inject = ['$window','nlFormService','$interpolate','$timeout'];\n\n  function nlSelect($window, nlFormService, $interpolate, $timeout) {\n    nlSelectController.$inject = [\"$scope\", \"$element\"];\n    return {\n      restrict:'E',\n      require: ['ngModel','^^nlForm'],\n      transclude: true,\n      template: selectTpl,\n      link: nlSelectLink,\n      controller: nlSelectController,\n      scope: {\n        selected: \"=?\",\n        placeholder: \"@\"\n      },\n    }\n\n    nlSelectController.$inject('$scope','$element');\n\n    function nlSelectController($scope,$element) {\n        this.optionClicked = function() {\n          var ngModel = $element.controller('ngModel');\n          if(ngModel.$viewValue != undefined && typeof ngModel.$viewValue === 'object') {\n            $scope.selected = ngModel.$viewValue;\n            $scope.$apply();\n          }\n          nlFormService.setActive($element);\n        }\n    }\n\n\n    function nlSelectLink($scope, $element, $attr, $ctrls) {\n\n      var OFFSET = 10,\n          debounce,\n          formElement = $ctrls[1].element,\n          listElement = angular.element($element.children()[1]);\n      \n      /*\n      angular.element($window).on('resize',function(){\n         $timeout.cancel(debounce);\n          debounce = $timeout( function() {\n             if($element.hasClass('active')) {\n              updatePosition();\n             }\n          }, $attr.debounce || 200);\n      });\n*/\n\n      angular.element($window).on('click',function(event){\n          var a = nlFormService.getActive();\n          // Is current element the active one?\n          if(a != null) {\n            // Is clicked element child of nlSelect\n            // If not a child, must be out in teh windo somewhere so close\n            if(childOf(angular.element(event.target),a) === false) {\n              nlFormService.closeActive();\n            }\n          }          \n      });\n\n      function childOf(/*child node*/c, /*parent node*/p){ //returns boolean\n              c = c[0] || c;\n              p = p[0] || p;\n              while((c=c.parentNode)&&c!==p); \n              return !!c; \n      }\n\n      \n      angular.element($element).on('click',function(event){\n        updateClass();\n        //updatePosition();\n        nlFormService.setActive($element);\n      });\n\n      function updateClass() {\n        if($scope.selected !== undefined && $scope.selected.text !== '' && $scope.selected.text !== undefined) {\n            $element.removeClass('active');\n        }\n        else {\n            $element.addClass('active'); \n        }\n      }\n\n      function updatePosition() {\n        //Don't show if parent can't be seen\n        if(!isRendered($element[0])) {\n          return;\n        }\n\n        var listPosition = getPosition(listElement);        \n      }\n\n      function getPosition(el) {\n          el = el[0] || el;\n          var r = el.getBoundingClientRect();\n          //Account for scroll\n          var scrollTop = $window.pageYOffset;\n          var scrollLeft = $window.pageXOffset;\n          return { left: r.left + scrollLeft,\n                   top: r.top + scrollTop, \n                   right: r.right - scrollLeft,\n                   bottom: r.bottom - scrollTop,\n                   height: r.height, \n                   width: r.width};\n      }\n\n      function isRendered(el) {\n        /**\n         * Author: http://www.useallfive.com/thoughts/javascript-tool-detect-if-a-dom-element-is-truly-visible/\n         * Checks if a DOM element is visible. Takes into\n         * consideration its parents and overflow.\n         *\n         * @param (el)      the DOM element to check if is visible\n         *\n         * These params are optional that are sent in recursively,\n         * you typically won't use these:\n         *\n         * @param (t)       Top corner position number\n         * @param (r)       Right corner position number\n         * @param (b)       Bottom corner position number\n         * @param (l)       Left corner position number\n         * @param (w)       Element width number\n         * @param (h)       Element height number\n         */\n        function _isVisible(el, t, r, b, l, w, h) {\n            var p = el.parentNode,\n                    VISIBLE_PADDING = 2;\n\n            if ( !_elementInDocument(el) ) {\n                return false;\n            }\n\n            //-- Return true for document node\n            if ( 9 === p.nodeType ) {\n                return true;\n            }\n\n            //-- Return false if our element is invisible\n            if (\n                 '0' === _getStyle(el, 'opacity') ||\n                 'none' === _getStyle(el, 'display') ||\n                 'hidden' === _getStyle(el, 'visibility')\n            ) {\n                return false;\n            }\n\n            if (\n                'undefined' === typeof(t) ||\n                'undefined' === typeof(r) ||\n                'undefined' === typeof(b) ||\n                'undefined' === typeof(l) ||\n                'undefined' === typeof(w) ||\n                'undefined' === typeof(h)\n            ) {\n                t = el.offsetTop;\n                l = el.offsetLeft;\n                b = t + el.offsetHeight;\n                r = l + el.offsetWidth;\n                w = el.offsetWidth;\n                h = el.offsetHeight;\n            }\n            //-- If we have a parent, let's continue:\n            if ( p ) {\n                //-- Check if the parent can hide its children.\n                if ( ('hidden' === _getStyle(p, 'overflow') || 'scroll' === _getStyle(p, 'overflow')) ) {\n                    //-- Only check if the offset is different for the parent\n                    if (\n                        //-- If the target element is to the right of the parent elm\n                        l + VISIBLE_PADDING > p.offsetWidth + p.scrollLeft ||\n                        //-- If the target element is to the left of the parent elm\n                        l + w - VISIBLE_PADDING < p.scrollLeft ||\n                        //-- If the target element is under the parent elm\n                        t + VISIBLE_PADDING > p.offsetHeight + p.scrollTop ||\n                        //-- If the target element is above the parent elm\n                        t + h - VISIBLE_PADDING < p.scrollTop\n                    ) {\n                        //-- Our target element is out of bounds:\n                        return false;\n                    }\n                }\n                //-- Add the offset parent's left/top coords to our element's offset:\n                if ( el.offsetParent === p ) {\n                    l += p.offsetLeft;\n                    t += p.offsetTop;\n                }\n                //-- Let's recursively check upwards:\n                return _isVisible(p, t, r, b, l, w, h);\n            }\n            return true;\n        }\n\n        //-- Cross browser method to get style properties:\n        function _getStyle(el, property) {\n            if ( window.getComputedStyle ) {\n                return document.defaultView.getComputedStyle(el,null)[property];\n            }\n            if ( el.currentStyle ) {\n                return el.currentStyle[property];\n            }\n        }\n\n        function _elementInDocument(element) {\n            while (element = element.parentNode) {\n                if (element == document) {\n                        return true;\n                }\n            }\n            return false;\n        }\n\n        return _isVisible(el);\n      }\n\n    }\n  }\n\n  var selectTpl = '<button aria-label=\"menu\" class=\"nl-select-trigger\" value=\"{{ selected.value }}\">{{ selected.text || placeholder }}</button> \\\n      <div class=\"nl-select-options\"> \\\n        <ul ng-transclude> \\\n        </ul> \\\n      </div>';\n\n  nlOption.$inject = ['nlFormService','$interpolate'];\n\n  function nlOption(nlFormService, $interpolate) {\n    return {\n      restrict:'E',\n      require: ['^^ngModel','^^nlSelect'],\n      transclude: true,\n      replace: true,\n      template: optionTpl,\n      link: nlOptionLink,\n      scope: {\n        value: '@?value',\n      },\n    }\n\n    function nlOptionLink($scope, $element, $attr, $ctrls) {\n        angular.element($element).on('click',function(event){\n            event.stopPropagation();\n            /*\n            var val = {\n              value : $scope.value || $element.text(),\n              text : $element.text()\n            }\n            */\n            var val = $scope.value || $element.text();\n            //Set ngModel\n            $ctrls[0].$setViewValue(val);\n            //Update parent\n            $ctrls[1].optionClicked();\n        });    \n    }\n  }\n\n  var optionTpl = '<li flex ng-transclude></li>';\n  \n})();\n\n"],"sourceRoot":"/source/"}